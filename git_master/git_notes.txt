1. git config --global user.name "mohammed, sibgathulla"
2. git config --global user.email "mohammed.shak81@gmail.com"
3. git config --list
4. git help
5. git help add
6. git init
7. git status
8. git add .
9. git add filename.extension
10. git commit -m "message"
11. git log
12. git log --author="mohammed, sibgathulla"
13. git config --global core.editor "subl -n -w"
14. git diff
15. git diff --staged
16. git rm "filename.eextension"
17. git remove add orgin "url of the repository copied from github"
18. git pull origin master
19. git branch branch_name
20. git checkout branch_name
21. git branch -> Shows all branches
22. git merge branch_name 
23. git pull origin master // to pull changes from origin to develop branch
24. git reset HEAD filename //to revert commit of a file.
25. git reset HEAD~
26. rm -rf .git //the command remove all the files of the directory where it is executed
27. rm -rf * //It will completely format your complete laptop
28. you can fork a github existing project by logging into your account and just pressing the fork icon of other existing github repository.
29. touch Sample.txt //to create a file from terminal
30. echo "this is demo" > Sample.txt //To enter some text into the file from terminal
31. subl filename.txt // to open a file with sublime
32. git checkout -- filename // to discard the changes in working directory
33. git rm filename // to delete a file
34. git reset HEAD filename // to restore the file in staging area
35. git checkout -- filename //to restore the file to file system.
36. git rm -rf directoryname // it will delete all files and folders from that directory recursively
37. git mv filename newfilename //command to rename a file.
38. git mv filename directoryname // command to  move a file to another directory.
39. git log --online --graph --decorate //command to get the commit history in online
40. git log --since="2 days ago"
41. git log -- filename // to see the changes on that file
42. git show commit id // will show the details of that commit.
43. git log --all --graph --decorate --oneline
44. git config --global alias.history "log --all --graph --decorate --oneline" //this is the alias for the above long command
45. git history //now this will work as the alias for the 43 command
46. subl ~/.gitconfig
47. subl .gitignore
48. cat filename //it will display the contents of the file


